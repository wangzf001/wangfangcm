<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lcworld.dao.JyfwComplaintDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.lcworld.entity.JyfwComplaintEntity" id="jyfwComplaintMap">
        <result property="id" column="id"/>
        <result property="complaintContent" column="complaint_content"/>
        <result property="uid" column="uid"/>
        <result property="tagid" column="tagid"/>
        <result property="suggestContent" column="suggest_content"/>
        <result property="anonymous" column="anonymous"/>
        <result property="createtime" column="createtime"/>
        <result property="imgsStr" column="imgs_str"/>
    </resultMap>

	<select id="queryObject" resultType="com.lcworld.entity.JyfwComplaintEntity">
		select c.*,(select tag_name from t_jyfw_complaint_tag where c.tagid = id) tagName from t_jyfw_complaint c where c.id = #{value}
	</select>

	<select id="queryList" resultType="com.lcworld.entity.JyfwComplaintEntity">
		select c.*,(select tag_name from t_jyfw_complaint_tag where c.tagid = id) tagName,
		u.user_name username,u.photo photo
		from t_jyfw_complaint c
		left join t_user u on u.id = c.uid
		<where>
			<if test="ids!=null">and c.id in 
				<foreach item="id" collection="ids" open="(" separator="," close=")">
					#{id}
				</foreach>
			</if>
			<if test="uid != null">and c.uid = #{uid}</if>
			<if test="username != null and username.trim()!=''">and u.user_name like CONCAT("%",#{username},"%")</if>
			<if test="serviceuid!=null">
				AND EXISTS (
					SELECT
						serviceuid
					FROM
						t_jyfw_feedback_msg
					WHERE
						serviceuid = #{serviceuid}
						AND createtime = (SELECT MAX(createtime) FROM t_jyfw_feedback_msg WHERE complaint_id = c.id AND serviceuid is not null)
					)OR NOT EXISTS (SELECT serviceuid FROM t_jyfw_feedback_msg WHERE complaint_id = c.id)
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_jyfw_complaint c
		left join t_user u on u.id = c.uid
		<where>
			<if test="uid != null">c.uid = #{uid}</if>
			<if test="username != null and username.trim()!=''">u.user_name like CONCAT("%",#{username},"%")</if>
			<if test="serviceuid!=null">
				AND EXISTS (
					SELECT
						serviceuid
					FROM
						t_jyfw_feedback_msg
					WHERE
						serviceuid = #{serviceuid}
						AND createtime = (SELECT MAX(createtime) FROM t_jyfw_feedback_msg WHERE complaint_id = c.id AND serviceuid is not null)
					)OR NOT EXISTS (SELECT serviceuid FROM t_jyfw_feedback_msg WHERE complaint_id = c.id)
			</if>
		</where>
	</select>
	 
	<insert id="save" parameterType="com.lcworld.entity.JyfwComplaintEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_jyfw_complaint
		(
			`complaint_content`, 
			`uid`, 
			`tagid`, 
			`suggest_content`, 
			`anonymous`, 
			`createtime`,
			`imgs_str`
		)
		values
		(
			#{complaintContent}, 
			#{uid}, 
			#{tagid}, 
			#{suggestContent}, 
			#{anonymous}, 
			#{createtime},
			#{imgsStr}
		)
	</insert>
	<update id="update" parameterType="com.lcworld.entity.JyfwComplaintEntity">
		update t_jyfw_complaint 
		<set>
			<if test="complaintContent != null">`complaint_content` = #{complaintContent}, </if>
			<if test="uid != null">`uid` = #{uid}, </if>
			<if test="tagid != null">`tagid` = #{tagid}, </if>
			<if test="suggestContent != null">`suggest_content` = #{suggestContent}, </if>
			<if test="anonymous != null">`anonymous` = #{anonymous}, </if>
			<if test="createtime != null">`createtime` = #{createtime},</if>
			<if test="imgsStr != null">`imgs_str` = #{imgsStr}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_jyfw_complaint where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_jyfw_complaint where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>