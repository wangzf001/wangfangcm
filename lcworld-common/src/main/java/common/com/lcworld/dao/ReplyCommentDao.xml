<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lcworld.dao.ReplyCommentDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.lcworld.entity.ReplyCommentEntity" id="replyCommentMap">
        <result property="id" column="id"/>
        <result property="createtime" column="createtime"/>
        <result property="ordertype" column="ordertype"/>
        <result property="content" column="content"/>
        <result property="uid" column="uid"/>
        <result property="commentid" column="commentid"/>
    </resultMap>

	<select id="queryObject" resultType="com.lcworld.entity.ReplyCommentEntity">
		select * from t_reply_comment where id = #{value}
	</select>

	<select id="queryList" resultType="com.lcworld.entity.ReplyCommentEntity">
		select * from t_reply_comment
        where
        <if test="commentid != null">
			commentid = #{commentid}
		</if>
        <if test="ordertype != null ">
		and	 ordertype = #{ordertype}
		</if>
		order by createtime
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_reply_comment 
	</select>
	 
	<insert id="save" parameterType="com.lcworld.entity.ReplyCommentEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_reply_comment
		(
			`createtime`, 
			`ordertype`, 
			`content`, 
			`uid`, 
			`commentid`
		)
		values
		(
			#{createtime}, 
			#{ordertype}, 
			#{content}, 
			#{uid}, 
			#{commentid}
		)
	</insert>
	 
	<update id="update" parameterType="com.lcworld.entity.ReplyCommentEntity">
		update t_reply_comment 
		<set>
			<if test="createtime != null">`createtime` = #{createtime}, </if>
			<if test="ordertype != null">`ordertype` = #{ordertype}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="uid != null">`uid` = #{uid}, </if>
			<if test="commentid != null">`commentid` = #{commentid}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from t_reply_comment where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_reply_comment where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>