<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lcworld.dao.SysUserDao">
	<select id="queryObject" resultType="com.lcworld.entity.SysUserEntity">
		select * from sys_user where user_id = #{value}
	</select>
	
	<select id="queryList" resultType="com.lcworld.entity.SysUserEntity">
		select a.*,j.name departname,k.name officename from sys_user a 
		left join t_depart j on a.departid = j.id
			left join t_office k on a.officeid = k.id 
		<where>
		     <if test="departid != null and departid != ''">
          and a.departid =#{departid} 
        </if>
        <if test="officeid != null and officeid != ''">
          and a.officeid =#{officeid} 
        </if>
         <if test="realname != null and realname != ''">
          and a.realname  like '%${realname}%'
        </if>
    
        
			<if test="createUserId != null">
				and `a.create_user_id` = #{createUserId} 
			</if>
			<if test="usertype != null">
				and a.usertype = #{usertype} 
			</if>
			<if test="username != null and username.trim() != ''">
				and a.username like concat('%',#{username},'%') 
			</if>
			
			<if test="type != null and type.trim() != ''">
				and `a.type` = #{type}
			</if>
			<if test="roleId != null and roleId.trim() != ''">
				and `a.user_id` in 
				<foreach item="userId" collection="userIds" open="(" separator="," close=")">
					#{userId}
				</foreach>
			</if>
		</where>
		order by a.user_id desc
		
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from sys_user a
		left join t_depart j on a.departid = j.id
			left join t_office k on a.officeid = k.id 
		<where>
		 <if test="departid != null and departid != ''">
          and a.departid =#{departid} 
        </if>
        <if test="officeid != null and officeid != ''">
          and a.officeid =#{officeid} 
        </if>
         <if test="realname != null and realname != ''">
          and a.realname  like '%${realname}%'
        </if>
		<if test="usertype != null">
                and a.usertype = #{usertype} 
            </if>
			<if test="createUserId != null">
				and `a.create_user_id` = #{createUserId} 
			</if>
			<if test="username != null and username.trim() != ''">
				and a.username like concat('%',#{username},'%') 
			</if>
			
			<if test="type != null and type.trim() != ''">
				and `type` = #{type}
			</if>
			<if test="roleId != null and roleId.trim() != ''">
				and `a.user_id` in 
				<foreach item="userId" collection="userIds" open="(" separator="," close=")">
					#{userId}
				</foreach>
			</if>
		</where>
	</select>
	
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
		where ur.user_id = #{userId}
	</select>
	
	<select id="queryByUserName" resultType="com.lcworld.entity.SysUserEntity">
		select * from sys_user where username = #{username}
	</select>
	
	<insert id="save" parameterType="com.lcworld.entity.SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			`username`, 
			`password`, 
			`email`, 
			`mobile`, 
			`status`, 
			`create_user_id`, 
			`create_time`,
			`departid`,
			`officeid`,
			`usertype`,
			`realname`
			
			
		)
		values
		(
			#{username}, 
			#{password}, 
			#{email}, 
			#{mobile}, 
			#{status}, 
			#{createUserId}, 
			#{createTime},
			#{departid},
			#{officeid},
			#{usertype},
			#{realname}
			
		)
	</insert>
	 
	<update id="update" parameterType="com.lcworld.entity.SysUserEntity">
		update sys_user 
		<set>
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createUserId != null">`create_user_id` = #{createUserId}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="officeid != null">`officeid` = #{officeid},</if>
			<if test="departid != null">`departid` = #{departid} ,</if>
			<if test="usertype != null">`usertype` = #{usertype}, </if>
			<if test="realname != null">`realname` = #{realname} </if>
			
		</set>
		where user_id = #{userId}
		<if test="createUserId != null">
			and `create_user_id` = #{createUserId} 
		</if>
	</update>
	
	<update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword} 
			where user_id = #{userId} and password = #{password}
	</update>
	
	<delete id="deleteBatch">
		delete from sys_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		;
		delete from sys_user_role where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	
	<select id="queryUsersByUid" resultType="com.lcworld.entity.SysUserEntity">
		
		SELECT
			DISTINCT a.*,j.name departname,k.name officename
		FROM
			sys_user a
			left join t_depart j on a.departid = j.id
			left join t_office k on a.officeid = k.id 
		INNER JOIN sys_user_role b ON a.user_id = b.user_id
		INNER JOIN sys_role c ON b.role_id = c.role_id
		INNER JOIN (
			SELECT
				min(b.rolesort) minsort,
				roletype,c.departid,c.officeid
			FROM
				sys_user_role a
			INNER JOIN sys_role b ON a.role_id = b.role_id
			inner join sys_user c on a.user_id = c.user_id 
			WHERE
				1 = 1
			AND a.user_id = #{uid}
			GROUP BY
				b.roletype
		) d ON c.roletype = d.roletype and ((c.rolesort = 1 and a.departid=d.departid ) or (c.rolesort = 2 and a.departid=d.departid and a.officeid =d.officeid ))
		AND c.rolesort > d.minsort and a.usertype=2
		order by a.user_id desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<select id="queryTotalByUid" resultType="int">
	select count(*) from 
	(	SELECT
			DISTINCT a.*
		FROM
			sys_user a
		INNER JOIN sys_user_role b ON a.user_id = b.user_id
		INNER JOIN sys_role c ON b.role_id = c.role_id
		INNER JOIN (
			SELECT
				min(b.rolesort) minsort,
				roletype,c.departid,c.officeid
			FROM
				sys_user_role a
			INNER JOIN sys_role b ON a.role_id = b.role_id
			inner join sys_user c on a.user_id = c.user_id 
			WHERE
				1 = 1
			AND a.user_id = #{uid}
			GROUP BY
				b.roletype
		) d ON c.roletype = d.roletype and ((c.rolesort = 1 and a.departid=d.departid ) or (c.rolesort = 2 and a.departid=d.departid and a.officeid =d.officeid ))
		AND c.rolesort > d.minsort and a.usertype=2 )M where 1=1
	</select>
	
	<select id="queryUsers" resultType="com.lcworld.entity.SysUserEntity">
        
        SELECT
             DISTINCT a.*,j.name departname,k.name officename
        FROM
            sys_user a
            left join t_depart j on a.departid = j.id
            left join t_office k on a.officeid = k.id 
        INNER JOIN sys_user_role b ON a.user_id = b.user_id
        INNER JOIN sys_role c ON b.role_id = c.role_id
        INNER JOIN (
            SELECT
                min(b.rolesort) minsort,
                roletype,c.departid,c.officeid
            FROM
                sys_user_role a
            INNER JOIN sys_role b ON a.role_id = b.role_id
            inner join sys_user c on a.user_id = c.user_id 
            WHERE
                1 = 1
            AND a.user_id = 2 and b.type = 2
            GROUP BY
                b.roletype
        ) d ON c.roletype = d.roletype  and (c.rolesort = 2 and a.departid=d.departid )
        AND c.rolesort > d.minsort

union 
(
SELECT 
    DISTINCT a.*, j. NAME departname,   k. NAME officename

FROM
    sys_user a
INNER JOIN sys_user_role b ON a.user_id = b.user_id
INNER JOIN sys_role c ON b.role_id = c.role_id
AND c.rolesort = 2 and c.type =1
LEFT JOIN t_depart j ON a.departid = j.id
LEFT JOIN t_office k ON a.officeid = k.id
WHERE
    a.departid = #{departid}
    )
    order by user_id desc
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>
    
    <select id="queryUsersTotal" resultType="int">
       select count(*) from (   
        SELECT
             DISTINCT a.*,j.name departname,k.name officename
        FROM
            sys_user a
            left join t_depart j on a.departid = j.id
            left join t_office k on a.officeid = k.id 
        INNER JOIN sys_user_role b ON a.user_id = b.user_id
        INNER JOIN sys_role c ON b.role_id = c.role_id
        INNER JOIN (
            SELECT
                min(b.rolesort) minsort,
                roletype,c.departid,c.officeid
            FROM
                sys_user_role a
            INNER JOIN sys_role b ON a.role_id = b.role_id
            inner join sys_user c on a.user_id = c.user_id 
            WHERE
                1 = 1
            AND a.user_id = 2 and b.type = 2
            GROUP BY
                b.roletype
        ) d ON c.roletype = d.roletype  and (c.rolesort = 2 and a.departid=d.departid )
        AND c.rolesort > d.minsort

union 
(
SELECT 
    DISTINCT a.*, j. NAME departname,   k. NAME officename

FROM
    sys_user a
INNER JOIN sys_user_role b ON a.user_id = b.user_id
INNER JOIN sys_role c ON b.role_id = c.role_id
AND c.rolesort = 2 and c.type =1
LEFT JOIN t_depart j ON a.departid = j.id
LEFT JOIN t_office k ON a.officeid = k.id
WHERE
    a.departid = #{departid}
       ) )M where 1=1
    </select>

</mapper>